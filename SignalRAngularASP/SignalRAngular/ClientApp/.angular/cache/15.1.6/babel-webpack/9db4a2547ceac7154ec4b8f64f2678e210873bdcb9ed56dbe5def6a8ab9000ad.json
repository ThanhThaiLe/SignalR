{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction HomeComponent_div_74_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21)(3, \"div\", 22)(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 23);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const msg_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", msg_r1.message, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 2, msg_r1.date, \"medium\"), \" \");\n  }\n}\nfunction HomeComponent_div_74_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"div\", 25)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 23);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const msg_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", msg_r1.message, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(6, 2, msg_r1.date, \"medium\"), \"\");\n  }\n}\nfunction HomeComponent_div_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, HomeComponent_div_74_div_1_Template, 9, 5, \"div\", 17);\n    i0.ɵɵtemplate(2, HomeComponent_div_74_div_2_Template, 7, 5, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r1.type == \"received\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r1.type == \"sent\");\n  }\n}\nexport class HomeComponent {\n  constructor() {\n    this.title = 'ClientApp';\n    this.txtMessage = '';\n    this.uniqueID = new Date().getTime().toString();\n    this.messages = new Array();\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)();\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 80,\n  vars: 2,\n  consts: [[\"href\", \"https://get.asp.net/\"], [\"href\", \"https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx\"], [\"href\", \"https://angular.io/\"], [\"href\", \"http://www.typescriptlang.org/\"], [\"href\", \"http://getbootstrap.com/\"], [1, \"container\"], [1, \"text-center\", \"chat_header\"], [1, \"messaging\"], [1, \"inbox_msg\"], [1, \"mesgs\"], [1, \"msg_history\"], [4, \"ngFor\", \"ngForOf\"], [1, \"type_msg\"], [1, \"input_msg_write\"], [\"type\", \"text\", \"placeholder\", \"Type a message\", 1, \"write_msg\", 3, \"value\", \"keydown.enter\"], [\"type\", \"button\", 1, \"msg_send_btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-paper-plane-o\"], [\"class\", \"incoming_msg\", 4, \"ngIf\"], [\"class\", \"outgoing_msg\", 4, \"ngIf\"], [1, \"incoming_msg\"], [1, \"incoming_msg_img\"], [1, \"received_msg\"], [1, \"received_withd_msg\"], [1, \"time_date\"], [1, \"outgoing_msg\"], [1, \"sent_msg\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Hello, world!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Welcome to your new single-page application, built with:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ul\")(5, \"li\")(6, \"a\", 0);\n      i0.ɵɵtext(7, \"ASP.NET Core\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \" and \");\n      i0.ɵɵelementStart(9, \"a\", 1);\n      i0.ɵɵtext(10, \"C#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \" for cross-platform server-side code \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"li\")(13, \"a\", 2);\n      i0.ɵɵtext(14, \"Angular\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \" and \");\n      i0.ɵɵelementStart(16, \"a\", 3);\n      i0.ɵɵtext(17, \"TypeScript\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" for client-side code \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"li\")(20, \"a\", 4);\n      i0.ɵɵtext(21, \"Bootstrap\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \" for layout and styling \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"p\");\n      i0.ɵɵtext(24, \"To help you get started, we've also set up:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"ul\")(26, \"li\")(27, \"strong\");\n      i0.ɵɵtext(28, \"Client-side navigation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \". For example, click \");\n      i0.ɵɵelementStart(30, \"em\");\n      i0.ɵɵtext(31, \"Counter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \" then \");\n      i0.ɵɵelementStart(33, \"em\");\n      i0.ɵɵtext(34, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \" to return here. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"li\")(37, \"strong\");\n      i0.ɵɵtext(38, \"Angular CLI integration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \". In development mode, there's no need to run \");\n      i0.ɵɵelementStart(40, \"code\");\n      i0.ɵɵtext(41, \"ng serve\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \". It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"li\")(44, \"strong\");\n      i0.ɵɵtext(45, \"Efficient production builds\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(46, \". In production mode, development-time features are disabled, and your \");\n      i0.ɵɵelementStart(47, \"code\");\n      i0.ɵɵtext(48, \"dotnet publish\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \" configuration automatically invokes \");\n      i0.ɵɵelementStart(50, \"code\");\n      i0.ɵɵtext(51, \"ng build\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(52, \" to produce minified, ahead-of-time compiled JavaScript files. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(53, \"p\");\n      i0.ɵɵtext(54, \" The \");\n      i0.ɵɵelementStart(55, \"code\");\n      i0.ɵɵtext(56, \"ClientApp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \" subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any \");\n      i0.ɵɵelementStart(58, \"code\");\n      i0.ɵɵtext(59, \"ng\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(60, \" command (e.g., \");\n      i0.ɵɵelementStart(61, \"code\");\n      i0.ɵɵtext(62, \"ng test\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(63, \"), or use \");\n      i0.ɵɵelementStart(64, \"code\");\n      i0.ɵɵtext(65, \"npm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(66, \" to install extra packages into it.\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"div\", 5)(68, \"h3\", 6);\n      i0.ɵɵtext(69, \"Chat Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"div\", 7)(71, \"div\", 8)(72, \"div\", 9)(73, \"div\", 10);\n      i0.ɵɵtemplate(74, HomeComponent_div_74_Template, 3, 2, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(75, \"div\", 12)(76, \"div\", 13)(77, \"input\", 14);\n      i0.ɵɵlistener(\"keydown.enter\", function HomeComponent_Template_input_keydown_enter_77_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(78, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_78_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelement(79, \"i\", 16);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(74);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"value\", ctx.txtMessage);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.DatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;IAkDYA,+BAAyD;IACvDA,0BAAoC;IACpCA,+BAA0B;IAGpBA,YACF;IAAAA,iBAAI;IACJA,gCAAwB;IACtBA,YACF;;IAAAA,iBAAO;;;;IAJLA,eACF;IADEA,+CACF;IAEEA,eACF;IADEA,4EACF;;;;;IAINA,+BAAqD;IAG/CA,YACF;IAAAA,iBAAI;IACJA,gCAAwB;IAACA,YAAgC;;IAAAA,iBAAO;;;;IAF9DA,eACF;IADEA,+CACF;IACyBA,eAAgC;IAAhCA,2EAAgC;;;;;IAnB/DA,2BAAkC;IAChCA,sEAYM;IACNA,sEAOM;IACRA,iBAAM;;;;IArBuBA,eAA4B;IAA5BA,gDAA4B;IAa5BA,eAAwB;IAAxBA,4CAAwB;;;ACzD/D,OAAM,MAAOC,aAAa;EAJ1BC;IAKE,UAAK,GAAG,WAAW;IACnB,eAAU,GAAW,EAAE;IACvB,aAAQ,GAAW,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAACC,QAAQ,EAAE;IAClD,aAAQ,GAAG,IAAIC,KAAK,EAAW;;;AAJpBL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDN1BX,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MACtBA,yBAAG;MAAAA,wEAAwD;MAAAA,iBAAI;MAC/DA,0BAAI;MAE+BA,4BAAY;MAAAA,iBAAI;MAACA,qBAChD;MAAAA,4BAAiE;MAAAA,mBAAE;MAAAA,iBAAI;MAACA,sDAE1E;MAAAA,iBAAK;MACLA,2BAAI;MAC4BA,wBAAO;MAAAA,iBAAI;MAACA,sBAC1C;MAAAA,6BAAyC;MAAAA,2BAAU;MAAAA,iBAAI;MAACA,uCAC1D;MAAAA,iBAAK;MACLA,2BAAI;MACiCA,0BAAS;MAAAA,iBAAI;MAACA,yCACnD;MAAAA,iBAAK;MAEPA,0BAAG;MAAAA,4DAA2C;MAAAA,iBAAI;MAClDA,2BAAI;MAEQA,uCAAsB;MAAAA,iBAAS;MAAAA,sCACvC;MAAAA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAACA,uBAAK;MAAAA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MAACA,kCACtC;MAAAA,iBAAK;MACLA,2BAAI;MACMA,wCAAuB;MAAAA,iBAAS;MAAAA,+DAC5B;MAAAA,6BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MAAAA,2KAGnC;MAAAA,iBAAK;MACLA,2BAAI;MACMA,4CAA2B;MAAAA,iBAAS;MAAAA,wFAE5C;MAAAA,6BAAM;MAAAA,+BAAc;MAAAA,iBAAO;MAACA,sDAC5B;MAAAA,6BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MAACA,gFAExB;MAAAA,iBAAK;MAEPA,0BAAG;MACDA,sBAAI;MAAAA,6BAAM;MAAAA,0BAAS;MAAAA,iBAAO;MAACA,sIAE3B;MAAAA,6BAAM;MAAAA,mBAAE;MAAAA,iBAAO;MAACA,iCAAe;MAAAA,6BAAM;MAAAA,wBAAO;MAAAA,iBAAO;MAAAA,2BACnD;MAAAA,6BAAM;MAAAA,oBAAG;MAAAA,iBAAO;MAACA,sDACnB;MAAAA,iBAAI;MAEJA,+BAAuB;MACeA,iCAAgB;MAAAA,iBAAK;MACzDA,+BAAuB;MAIfA,iEAsBM;MACRA,iBAAM;MACNA,gCAAsB;MAMhBA;QAAA,OAAiBY,iBAAa;MAAA,EAAC;MAJjCZ,iBAME;MACFA,mCAAmE;MAAxBA;QAAA,OAASY,iBAAa;MAAA,EAAC;MAChEZ,yBAAsD;MACxDA,iBAAS;;;MAnCUA,gBAAW;MAAXA,sCAAW;MA6B5BA,eAAoB;MAApBA,sCAAoB","names":["i0","HomeComponent","constructor","Date","getTime","toString","Array","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Github\\SignalR\\SignalRAngularASP\\SignalRAngular\\ClientApp\\src\\app\\home\\home.component.html","D:\\Github\\SignalR\\SignalRAngularASP\\SignalRAngular\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li>\r\n    <a href=\"https://get.asp.net/\">ASP.NET Core</a> and\r\n    <a href=\"https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx\">C#</a> for\r\n    cross-platform server-side code\r\n  </li>\r\n  <li>\r\n    <a href=\"https://angular.io/\">Angular</a> and\r\n    <a href=\"http://www.typescriptlang.org/\">TypeScript</a> for client-side code\r\n  </li>\r\n  <li>\r\n    <a href=\"http://getbootstrap.com/\">Bootstrap</a> for layout and styling\r\n  </li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li>\r\n    <strong>Client-side navigation</strong>. For example, click\r\n    <em>Counter</em> then <em>Back</em> to return here.\r\n  </li>\r\n  <li>\r\n    <strong>Angular CLI integration</strong>. In development mode, there's no\r\n    need to run <code>ng serve</code>. It runs in the background automatically,\r\n    so your client-side resources are dynamically built on demand and the page\r\n    refreshes when you modify any file.\r\n  </li>\r\n  <li>\r\n    <strong>Efficient production builds</strong>. In production mode,\r\n    development-time features are disabled, and your\r\n    <code>dotnet publish</code> configuration automatically invokes\r\n    <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript\r\n    files.\r\n  </li>\r\n</ul>\r\n<p>\r\n  The <code>ClientApp</code> subdirectory is a standard Angular CLI application.\r\n  If you open a command prompt in that directory, you can run any\r\n  <code>ng</code> command (e.g., <code>ng test</code>), or use\r\n  <code>npm</code> to install extra packages into it.\r\n</p>\r\n\r\n<div class=\"container\">\r\n  <h3 class=\"text-center chat_header\">Chat Application</h3>\r\n  <div class=\"messaging\">\r\n    <div class=\"inbox_msg\">\r\n      <div class=\"mesgs\">\r\n        <div class=\"msg_history\">\r\n          <div *ngFor=\"let msg of messages\">\r\n            <div class=\"incoming_msg\" *ngIf=\"msg.type == 'received'\">\r\n              <div class=\"incoming_msg_img\"></div>\r\n              <div class=\"received_msg\">\r\n                <div class=\"received_withd_msg\">\r\n                  <p>\r\n                    {{ msg.message }}\r\n                  </p>\r\n                  <span class=\"time_date\">\r\n                    {{ msg.date | date : \"medium\" }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"outgoing_msg\" *ngIf=\"msg.type == 'sent'\">\r\n              <div class=\"sent_msg\">\r\n                <p>\r\n                  {{ msg.message }}\r\n                </p>\r\n                <span class=\"time_date\"> {{ msg.date | date : \"medium\" }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"type_msg\">\r\n          <div class=\"input_msg_write\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"write_msg\"\r\n              [value]=\"txtMessage\"\r\n              (keydown.enter)=\"sendMessage()\"\r\n              placeholder=\"Type a message\"\r\n            />\r\n            <button class=\"msg_send_btn\" type=\"button\" (click)=\"sendMessage()\">\r\n              <i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  title = 'ClientApp';\r\n  txtMessage: string = '';\r\n  uniqueID: string = new Date().getTime().toString();\r\n  messages = new Array<Message>();\r\n  message: any;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}