{"ast":null,"code":"import _asyncToGenerator from \"D:/Github/SignalR/SignalRAngularASP/SignalRAngular/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as signalR from '@microsoft/signalr';\nimport * as i0 from \"@angular/core\";\nexport class SignalrService {\n  constructor() {\n    this.hubUrl = 'https://localhost:7199/signalrdemohub';\n  }\n  initiateSignalrConnection() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.connection = new signalR.HubConnectionBuilder().withUrl(_this.hubUrl).withAutomaticReconnect().build();\n        yield _this.connection.start({\n          withCredentials: false\n        });\n        console.log(`SignalR connection success! connectionId: ${_this.connection.connectionId}`);\n      } catch (error) {\n        console.log(`SignalR connection error: ${error}`);\n      }\n    })();\n  }\n}\nSignalrService.ɵfac = function SignalrService_Factory(t) {\n  return new (t || SignalrService)();\n};\nSignalrService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SignalrService,\n  factory: SignalrService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;;AAK7C,OAAM,MAAOC,cAAc;EAIzBC;IACE,IAAI,CAACC,MAAM,GAAG,uCAAuC;EACvD;EAEaC,yBAAyB;IAAA;IAAA;MACpC,IAAI;QACF,KAAI,CAACC,UAAU,GAAG,IAAIL,OAAO,CAACM,oBAAoB,EAAE,CACjDC,OAAO,CAAC,KAAI,CAACJ,MAAM,CAAC,CACpBK,sBAAsB,EAAE,CACxBC,KAAK,EAAE;QAEV,MAAM,KAAI,CAACJ,UAAU,CAACK,KAAK,CAAC;UAAEC,eAAe,EAAE;QAAK,CAAE,CAAC;QAEvDC,OAAO,CAACC,GAAG,CACT,6CAA6C,KAAI,CAACR,UAAU,CAACS,YAAY,EAAE,CAC5E;OACF,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAAC,6BAA6BE,KAAK,EAAE,CAAC;;IAClD;EACH;;AAvBWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["signalR","SignalrService","constructor","hubUrl","initiateSignalrConnection","connection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","withCredentials","console","log","connectionId","error","factory","providedIn"],"sourceRoot":"","sources":["D:\\Github\\SignalR\\SignalRAngularASP\\SignalRAngular\\ClientApp\\src\\app\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SignalrService {\r\n  hubUrl: string;\r\n  connection: any;\r\n\r\n  constructor() {\r\n    this.hubUrl = 'https://localhost:7199/signalrdemohub';\r\n  }\r\n\r\n  public async initiateSignalrConnection(): Promise<void> {\r\n    try {\r\n      this.connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(this.hubUrl)\r\n        .withAutomaticReconnect()\r\n        .build();\r\n\r\n      await this.connection.start({ withCredentials: false });\r\n\r\n      console.log(\r\n        `SignalR connection success! connectionId: ${this.connection.connectionId}`\r\n      );\r\n    } catch (error) {\r\n      console.log(`SignalR connection error: ${error}`);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}