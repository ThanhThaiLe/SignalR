{"ast":null,"code":"import * as signalR from \"@microsoft/signalr\";\nimport * as i0 from \"@angular/core\";\nexport class SignalrService {\n  constructor() {\n    this.startConnection = () => {\n      this.hubConnection = new signalR.HubConnectionBuilder().withUrl('https://localhost:5001/chart').build();\n      this.hubConnection.start().then(() => console.log('Connection started')).catch(err => console.log('Error while starting connection: ' + err));\n    };\n    this.addTransferChartDataListener = () => {\n      this.hubConnection.on('transferchartdata', data => {\n        this.data = data;\n        console.log(data);\n      });\n    };\n  }\n}\nSignalrService.ɵfac = function SignalrService_Factory(t) {\n  return new (t || SignalrService)();\n};\nSignalrService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SignalrService,\n  factory: SignalrService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;;AAM7C,OAAM,MAAOC,cAAc;EAH3BC;IAOS,oBAAe,GAAG,MAAK;MAC5B,IAAI,CAACC,aAAa,GAAG,IAAIH,OAAO,CAACI,oBAAoB,EAAE,CACpDC,OAAO,CAAC,8BAA8B,CAAC,CACvCC,KAAK,EAAE;MACV,IAAI,CAACH,aAAa,CACfI,KAAK,EAAE,CACPC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAC7CC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAAC,mCAAmC,GAAGE,GAAG,CAAC,CAAC;IACzE,CAAC;IAEM,iCAA4B,GAAG,MAAK;MACzC,IAAI,CAACT,aAAa,CAACU,EAAE,CAAC,mBAAmB,EAAGC,IAAI,IAAI;QAClD,IAAI,CAACA,IAAI,GAAGA,IAAI;QAChBL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC;;;AAnBUb,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFb;AAAM","names":["signalR","SignalrService","constructor","hubConnection","HubConnectionBuilder","withUrl","build","start","then","console","log","catch","err","on","data","factory","providedIn"],"sourceRoot":"","sources":["D:\\Github\\SignalR\\SignalRBasic\\SignalRBasic\\ClientApp\\src\\app\\services\\signalr.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as signalR from \"@microsoft/signalr\"\nimport { ChartModel } from './ChartModel';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalrService {\n  public data: ChartModel[];\n\n  private hubConnection: signalR.HubConnection\n  public startConnection = () => {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:5001/chart')\n      .build();\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  public addTransferChartDataListener = () => {\n    this.hubConnection.on('transferchartdata', (data) => {\n      this.data = data;\n      console.log(data);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}